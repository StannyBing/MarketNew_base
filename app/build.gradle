apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
// 依赖插件脚本
//apply from: 'tinker-support.gradle'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    signingConfigs {
        sign {
            keyAlias 'zxdlxx'
            keyPassword '123456'
            storeFile file('F:/keystore/zxdl.jks')
            storePassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    compileSdkVersion 27
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.zx.marketnew_base"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.flavorName}_${getTime()}_${variant.versionName}.apk"
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LGPL2.1'
    }
    buildTypes {
        debug {
            minifyEnabled false //是否开启混淆
            buildConfigField "boolean", "RELEASE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            buildConfigField "boolean", "RELEASE", "true"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }
    //配置多版本
    productFlavors {
        base {
            dimension "default"
            matchingFallbacks = ["base"]
            versionCode 3
            versionName "1.0.2"
            applicationId "com.zx.marketnew_base"
            manifestPlaceholders = [APP_NAME     : "移动监督管理系统",
                                    APP_ICON     : "@mipmap/ic_launcher",
                                    JPUSH_PKGNAME: applicationId,
                                    JPUSH_APPKEY : "29c3083a4c451fb2e2a18e8a",
                                    JPUSH_CHANNEL: "developer-default",]
        }
        dx {
            dimension "default"
            matchingFallbacks = ["dx"]
            versionCode 1
            versionName "1.0.0"
            applicationId "com.zx.marketnew_basedx"
            manifestPlaceholders = [APP_NAME     : "移动监督管理系统",
                                    APP_ICON     : "@mipmap/dx_ic_launcher",
                                    JPUSH_PKGNAME: applicationId,
                                    JPUSH_APPKEY : "29c3083a4c451fb2e2a18e8a",
                                    JPUSH_CHANNEL: "developer-default",]
        }
        rc {
            dimension "default"
            matchingFallbacks = ["rc"]
            versionCode 18
            versionName "2.0.0"
            applicationId "com.zx.marketnew_baserc"
            manifestPlaceholders = [APP_NAME     : "移动监督管理系统",
                                    APP_ICON     : "@mipmap/rc_ic_launcher",
                                    JPUSH_PKGNAME: applicationId,
                                    JPUSH_APPKEY : "29c3083a4c451fb2e2a18e8a",
                                    JPUSH_CHANNEL: "developer-default",]
        }
    }
}

def getTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

buildscript {
    repositories {
        jcenter()
    }
}

repositories {
    flatDir { dirs 'libs' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    api project(':module_library')
    api project(':module_supervise')
    api project(':module_complain')
    api project(':module_legalcase')
    api project(':module_statistics')
    api project(':module_map')
    api project(':module_entity')
    api project(':module_other')
    implementation 'com.youth.banner:banner:1.4.10'
    //api 'com.github.StannyBing:ZXUtils:2.2.0'
    //kapt 'com.alibaba:arouter-compiler:1.2.2'
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

kapt {
    generateStubs = true
    mapDiagnosticLocations = true
}
